{"ast":null,"code":"var _jsxFileName = \"/home/yana/Desktop/ReactUdemy/inputForms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameValid, setEnteredNameValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (event.target.value.trim().length > 0) {\n      setEnteredNameValid(true);\n    } // console.log(enteredName);\n\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim().length === 0) {\n      setEnteredNameValid(false);\n    }\n  };\n\n  const formSubmmitionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim().length === 0) {\n      setEnteredNameValid(false);\n      return;\n    }\n\n    setEnteredNameValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const isFormInValid = enteredNameTouched && !enteredNameValid;\n  const formClasses = !isFormInValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmmitionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: formClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), isFormInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Not Valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"lH16NHPwmyRU9o8yb9MRyC6iBfE=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/yana/Desktop/ReactUdemy/inputForms/src/components/SimpleInput.js"],"names":["useRef","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameValid","setEnteredNameValid","enteredNameTouched","setEnteredNameTouched","nameInputChangeHandler","event","target","value","trim","length","nameInputBlurHandler","formSubmmitionHandler","preventDefault","console","log","isFormInValid","formClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;;AAEA,QAAMS,sBAAsB,GAAIC,KAAD,IAAW;AACxCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AACA,QAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;AACxCR,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,KAJuC,CAKxC;;AACD,GAND;;AAOA,QAAMS,oBAAoB,GAAIL,KAAD,IAAW;AACtCF,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIL,WAAW,CAACU,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACnCR,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,GALD;;AAOA,QAAMU,qBAAqB,GAAIN,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACO,cAAN;AACAT,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIL,WAAW,CAACU,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACnCR,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACD;;AACDA,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAVD;;AAYA,QAAMgB,aAAa,GAAGb,kBAAkB,IAAI,CAACF,gBAA7C;AACA,QAAMgB,WAAW,GAAG,CAACD,aAAD,GAAiB,cAAjB,GAAkC,sBAAtD;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,WAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,QAAQ,EAAEZ,sBADZ;AAEE,QAAA,MAAM,EAAEM,oBAFV;AAGE,QAAA,KAAK,EAAEZ,WAHT;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA,cAFF,EASGiB,aAAa,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATpB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApDD;;GAAMnB,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameValid, setEnteredNameValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    if (event.target.value.trim().length > 0) {\n      setEnteredNameValid(true);\n    }\n    // console.log(enteredName);\n  };\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim().length === 0) {\n      setEnteredNameValid(false);\n    }\n  };\n\n  const formSubmmitionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim().length === 0) {\n      setEnteredNameValid(false);\n      return;\n    }\n    setEnteredNameValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const isFormInValid = enteredNameTouched && !enteredNameValid;\n  const formClasses = !isFormInValid ? \"form-control\" : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmmitionHandler}>\n      <div className={formClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n          type=\"text\"\n          id=\"name\"\n        />\n        {isFormInValid && <p className=\"error-text\">Name Not Valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}