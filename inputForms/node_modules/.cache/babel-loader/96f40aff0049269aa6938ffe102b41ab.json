{"ast":null,"code":"var _jsxFileName = \"/home/yana/Desktop/ReactUdemy/inputForms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName\n  } = useInput();\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailValid = enteredEmail.trim() !== \"\" && enteredEmail.includes(\"@\");\n  const isEmailInValid = enteredEmailTouched && !enteredEmailValid;\n  let formIsValid = false;\n\n  if (enteredNameValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmmitionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameValid) {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameClasses = !isNameInValid ? \"form-control\" : \"form-control invalid\";\n  const emailClasses = !isEmailInValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmmitionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), isNameInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Not Valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), isEmailInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email Not Valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"7qxxUUEIKGbmzvCWJHPe0R6QGYY=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/yana/Desktop/ReactUdemy/inputForms/src/components/SimpleInput.js"],"names":["useEffect","useState","useInput","SimpleInput","props","value","enteredName","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailValid","trim","includes","isEmailInValid","formIsValid","enteredNameValid","emailInputChangeHandler","event","target","emailInputBlurHandler","formSubmmitionHandler","preventDefault","setEnteredNameTouched","setEnteredName","nameClasses","isNameInValid","emailClasses","nameInputChangeHandler","nameInputBlurHandler"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const { value: enteredName } = useInput();\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailValid =\n    enteredEmail.trim() !== \"\" && enteredEmail.includes(\"@\");\n  const isEmailInValid = enteredEmailTouched && !enteredEmailValid;\n\n  let formIsValid = false;\n  if (enteredNameValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmmitionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameValid) {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmail(\"\");\n    setEnteredEmailTouched(false);\n  };\n\n  const nameClasses = !isNameInValid ? \"form-control\" : \"form-control invalid\";\n  const emailClasses = !isEmailInValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmmitionHandler}>\n      <div className={nameClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n          type=\"text\"\n          id=\"name\"\n        />\n        {isNameInValid && <p className=\"error-text\">Name Not Valid</p>}\n      </div>\n\n      <div className={emailClasses}>\n        <label htmlFor=\"email\">Your E-Mail</label>\n        <input\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n          type=\"email\"\n          id=\"email\"\n        />\n        {isEmailInValid && <p className=\"error-text\">Email Not Valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}