{"ast":null,"code":"var _jsxFileName = \"/home/yana/Desktop/ReactUdemy/inputForms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(value => value.trim() !== \"\" && enteredEmail.includes(\"@\"));\n  const {\n    value: enteredName,\n    isValid: enteredNameValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: resetName\n  } = useInput(value => value.trim() !== \"\");\n  let formIsValid = false;\n\n  if (enteredNameValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const formSubmmitionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameValid) {\n      return;\n    }\n\n    resetName();\n    resetEmail();\n  };\n\n  const nameClasses = !nameInputHasError ? \"form-control\" : \"form-control invalid\";\n  const emailClasses = !emailInputHasError ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmmitionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Not Valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email Not Valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"GsRvTTQQCZ+eSqtE2tCOxduF9AI=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/yana/Desktop/ReactUdemy/inputForms/src/components/SimpleInput.js"],"names":["useEffect","useState","useInput","SimpleInput","props","value","enteredEmail","isValid","enteredEmailValid","hasError","emailInputHasError","valueChangeHandler","emailChangeHandler","valueBlurHandler","emailBlurHandler","reset","resetEmail","trim","includes","enteredName","enteredNameValid","nameInputHasError","nameChangeHandler","nameBlurHandler","resetName","formIsValid","formSubmmitionHandler","event","preventDefault","nameClasses","emailClasses"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput((value) => value.trim() !== \"\" && enteredEmail.includes(\"@\"));\n  const {\n    value: enteredName,\n    isValid: enteredNameValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n  if (enteredNameValid && enteredEmailValid) {\n    formIsValid = true;\n  }\n\n  const formSubmmitionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameValid) {\n      return;\n    }\n\n    resetName();\n    resetEmail();\n  };\n\n  const nameClasses = !nameInputHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n  const emailClasses = !emailInputHasError\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmmitionHandler}>\n      <div className={nameClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          type=\"text\"\n          id=\"name\"\n        />\n        {nameInputHasError && <p className=\"error-text\">Name Not Valid</p>}\n      </div>\n\n      <div className={emailClasses}>\n        <label htmlFor=\"email\">Your E-Mail</label>\n        <input\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n          type=\"email\"\n          id=\"email\"\n        />\n        {emailInputHasError && <p className=\"error-text\">Email Not Valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}