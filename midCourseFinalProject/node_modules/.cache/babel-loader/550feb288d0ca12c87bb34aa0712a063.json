{"ast":null,"code":"var _jsxFileName = \"/home/yana/Desktop/ReactUdemy/midCourseFinalProject/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport react, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const exisitingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[exisitingItemIndex];\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[exisitingItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const exisitingItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[exisitingItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n\n    if (existingItem.amount === 1) {\n      updatedItems.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[exisitingItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCart;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCart);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"hY+geE+8N+zzJQrb463cEElobYM=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/yana/Desktop/ReactUdemy/midCourseFinalProject/src/store/CartProvider.js"],"names":["react","useReducer","CartContext","defaultCart","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","exisitingItemIndex","findIndex","id","existingItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCart","removeItemFromCart","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import react, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCart = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    const exisitingItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingItem = state.items[exisitingItemIndex];\n\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[exisitingItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const exisitingItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[exisitingItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n\n    if (existingItem.amount === 1) {\n      updatedItems.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[exisitingItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCart;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCart);\n  const addItemToCart = (item) => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item,\n    });\n  };\n  const removeItemFromCart = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id,\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}